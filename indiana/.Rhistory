coops <- read.csv("in_nodes.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
library(scales)
#loading the package:
library(igraph)
library(ggmap)
library(maps)
library(ggthemes)
library(mapdata)
library(tidyverse)
library(ggrepel)
library(networkD3)
coops <- read.csv("in_nodes.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
coops <- read.csv("in_nodes-geocoded.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "cat2", legend = TRUE)
#Read the network data:
net <- read.csv("in_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
#summary(g1)
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
#summary(g1)
g1 <- graph.data.frame(net, directed = T)
#Read the network data:
net <- read.csv("in_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#Read the network data:
net <- read.csv("in_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#Read the network data:
net <- read.csv("in_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#Read the network data:
net <- read.csv("in_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#Read the network data:
net <- read.csv("in_egdes.csv")
getwd()
#Read the network data:
net <- read.csv("in_edges.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
#summary(g1)
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = alldeg, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get only central's network
V(g1)$fullname[1]
#get only central's network
V(g1)$fullname[2]
coops <- read.csv("in_nodes-geocoded.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "cat2", legend = TRUE)
#Read the network data:
net <- read.csv("in_edges.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
#summary(g1)
#get only central's network
V(g1)$fullname[2]
V(g1)$fullname <- as.character(node_attrib$Label[poss])
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$fullname <- as.character(node_attrib$Label[poss])
head(node_attrib)
V(g1)$fullname <- as.character(node_attrib$label[poss])
#get only central's network
V(g1)$fullname[2]
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = colpal,
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = colpal,
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = colpal,
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12)[factor(V(g1)$cat2)],
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat1)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat1)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat3)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat3)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
tiff("test.tiff", units="in", width=6, height=5, res=600)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
dev.off()
