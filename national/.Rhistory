names(edges_in)
lookup_table <- nodes_sc %>%
full_join(nodes_indi, by="Label") %>%
rename(sc_id=ID.x, indi_id=ID.y) %>%
mutate(natl_id=1:n()) %>%
select(-Label)
lookup_table <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id=1:n()) %>%
select(-Label)
lookup_table
str(lookup_table)
new_edges_sc <- edges_sc %>%
left_join(lookup_table, by=c("Source"="sc_id")) %>%
select(-in_id, -Source) %>%
rename(Source=natl_id) %>%
left_join(lookup_table, by=c("Target"="sc_id")) %>%
select(-in_id, -Target) %>%
rename(Target=natl_id)
str(new_edges_sc)
library(dplyr)
nodes_sc <- data.frame(
ID = 1:4,
Label = LETTERS[1:4],
stringsAsFactors = F
)
nodes_indi <- data.frame(
ID = 1:4,
Label = LETTERS[4:7],
stringsAsFactors = F
)
edges_sc <- data.frame(
Source = c(1,1,3,4),
Target = c(2,4,3,2)
)
# note same df lol.
edges_indi <- data.frame(
Source = c(1,1,3,4),
Target = c(2,4,3,2)
)
nodes_sc <- read.csv("sc_nodes.csv", stringsAsFactors = F)
nodes_in <- read.csv("in_nodes-geocoded.csv", stringsAsFactors = F)
nodes_in <- rename(nodes_in, Label = label)
edges_sc <- read.csv("sc_egdes.csv", stringsAsFactors = F)
# note same df lol.
edges_in <- read.csv("in_edges.csv", stringsAsFactors = F)
names(edges_in) <- c("Source", "Target")
lookup_table <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id=1:n()) %>%
select(-Label)
str(lookup_table)
lookup_table <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id=1:n()) %>%
select(sc_id, natl_id, in_id)
str(lookup_table)
lookup_table
edges_sc <- edges_sc %>%
select(Source, Target)
new_edges_indi <- edges_in %>%
left_join(lookup_table, by=c("Source"="in_id")) %>%
select(-sc_id, -Source) %>%
rename(Source=natl_id) %>%
left_join(lookup_table, by=c("Target"="in_id")) %>%
select(-sc_id, -Target) %>%
rename(Target=natl_id)
new_edges_indi
new_edges_sc <- edges_sc %>%
left_join(lookup_table, by=c("Source"="sc_id")) %>%
select(-in_id, -Source) %>%
rename(Source=natl_id) %>%
left_join(lookup_table, by=c("Target"="sc_id")) %>%
select(-in_id, -Target) %>%
rename(Target=natl_id)
new_edges_sc
new_edges_sc
natl_edges <- rbind(new_edges_indi, new_edges_sc)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id=1:n())
library(dplyr)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id=1:n())
names(natl_nodes)
natl_nodes$State.x[is.na(natl_nodes$State.x)] <- natl_nodes$State.y[is.na(natl_nodes$State.x)]
natl_nodes$State.x
names(natl_nodes)
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, State, FIPS, address, Zip,
cat1, cat2, cat3, url, Notes, lon, lat)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y)
Zip = coalesce(Zip, zip),
FIPS = coalesce(FIPS.x, FIPS.y),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y)
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, State, FIPS, address, Zip,
cat1, cat2, cat3, url, Notes, lon, lat)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
FIPS = coalesce(FIPS.x, FIPS.y),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y)
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, State, FIPS, address, Zip,
cat1, cat2, cat3, url, Notes, lon, lat)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
FIPS = coalesce(FIPS.x, FIPS.y),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, State, FIPS, address, Zip,
cat1, cat2, cat3, url, Notes, lon, lat)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
FIPS = coalesce(FIPS.x, FIPS.y),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y))
rlang::last_error()
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
FIPS = coalesce(FIPS.x, FIPS.y))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
url = coalesce(url.x, url.y))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y))
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
Zip = coalesce(Zip, zip),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, Label, address, State, Zip, cat1, cat2,
cat3, url, Notes, lon, lat)
names(natl_nodes)
str(natl_nodes)
write.csv(natl_nodes, file = "natl_nodes.csv")
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
zipcode = coalesce(Zip, zip),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, Label, address, State, Zip, cat1, cat2,
cat3, url, Notes, lon, lat)
natl_nodes <- nodes_sc %>%
full_join(nodes_in, by="Label") %>%
rename(sc_id=ID.x, in_id=ID.y) %>%
mutate(natl_id = 1:n(),
State=coalesce(State.x, State.y),
cat1=coalesce(cat1.x, cat1.y),
cat2=coalesce(cat2.x, cat2.y),
cat3=coalesce(cat3.x, cat3.y),
zipcode = coalesce(Zip, zip),
url = coalesce(url.x, url.y),
Notes = coalesce(Notes, notes),
address = coalesce(formatted_address.x, formatted_address.y),
lon = coalesce(lng.x, lng.y),
lat = coalesce(lat.x, lat.y)) %>%
select(natl_id, Label, address, State, zipcode, cat1, cat2,
cat3, url, Notes, lon, lat)
write.csv(natl_nodes, file = "natl_nodes.csv")
names(nodes_in)
library(dplyr)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
library(scales)
#loading the package:
library(igraph)
library(ggmap)
library(maps)
library(ggthemes)
library(mapdata)
library(tidyverse)
library(ggrepel)
library(networkD3)
coops <- natl_nodes
names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "cat2", legend = TRUE)
#Read the network data:
net <- natl_edges
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#Read the network data:
net <- natl_edges
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$natl_id)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = alldeg, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
str_replace(natl_nodes$cat2, "Associations", "Association")
natl_nodes$cat2 <-
str_replace(natl_nodes$cat2, "Associations", "Association")
coops <- natl_nodes
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
#Read the network data:
net <- natl_edges
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$natl_id)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$log[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lon[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = alldeg, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(7)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(7),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
g1 <- graph.data.frame(net, directed = F)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lon[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = alldeg, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(7)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(7),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
tiff("natl.tiff", units="in", width=6, height=5, res=300)
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange", "purple")
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(7)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(7),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
dev.off()
tiff("natl.tiff", units="in", width=6, height=5, res=300)
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g1, layout = layout_components, vertex.size = 11,
edge.arrow.size = .4,
vertex.color = rainbow(7)[factor(V(g1)$cat2)],
main = "Indiana & South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$cat2)),
col = rainbow(7),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
dev.off()
