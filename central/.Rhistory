edge.color="blue",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="yellow",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="brown",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4, vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = colpal, pch = 16, bty = "n")
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
coops <- read.csv("sc_nodes_v2-geocoded.csv", sep = ",")
coops <- read.csv("sc_nodes_v2-geocoded.csv", sep = ",")
#names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "Category", legend = FALSE)
#loading the package:
library(igraph)
#Read the network data:
net <- read.csv("sc_edges.csv")
coops <- read.csv("sc_nodes_v2-geocoded.csv", sep = ",")
#names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
#loading the package:
library(igraph)
#Read the network data:
net <- read.csv("sc_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
V(g1)$state <- as.character(node_attrib$State[poss])
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$type <- as.character(node_attrib$Category[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
summary(g1)
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = 5, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = colpal,
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(16),
pch = 16, bty = "n")
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
plot(g.central)
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(16),
pch = 16, bty = "n")
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
plot(g.central, layout = layout_components, vertex.size = 15, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(16),
pch = 16, bty = "n")
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.central, layout = layout_components, vertex.size = 15, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(16),
pch = 16, bty = "n")
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(16),
pch = 16, bty = "n")
coops <- read.csv("sc_nodes_v2-geocoded.csv", sep = ",")
#names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
#loading the package:
library(igraph)
#Read the network data:
net <- read.csv("sc_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$type <- as.character(node_attrib$Category[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
summary(g1)
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = 5, edge.arrow.size = .4)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(16),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rgb(1:4/4,5:8/4,9:12/4)[factor(V(g1)$type)])
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rgb(1:4/4,5:8/8,9:12/12)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rgb(1:4/4,4,3)[factor(V(g1)$type)])
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rgb(1:4/4,1:4/4,1:4/4)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rgb(1:4/4,0,0)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(16)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(16),
pch = 16, bty = "n")
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
plot(g.dist)
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.central)$type)])
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(10),
pch = 16, bty = "n")
#get each Distribution network's graph
V(g1)$type == Distribution
#get each Distribution network's graph
V(g1)$type == "Distribution""
#get each Distribution network's graph
V(g1)$type == "Distribution"
#get each Distribution network's graph
V(g1)$type["Distribution"]
#get each Distribution network's graph
V(g1)["Distribution"]
#get each Distribution network's graph
V(g1)[type == "Distribution"]
#get each Distribution network's graph
d.nodes <- V(g1)[type == "Distribution"]
#get each Distribution network's graph
#d.nodes <- V(g1)[type == "Distribution"]
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
rm(d.nodes)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
plot(g.dnodes)
V(g1)$fullname[22]
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
plot(g.dist)
#basic plotting the network on a map
library(maps)
install.packages(maps)
install.packages("maps")
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)),
col = colpal[factor(V(g1)$type)],
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.dnodes)$type)])
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(10),
pch = 16, bty = "n")
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.dnodes)$type)])
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(10),
pch = 16, bty = "n")
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)])
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n")
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
plot(g.dist, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)])
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n"))
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
plot(g.dist, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)])
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n"))
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
plot(g.dist, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)])
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n")
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
par(mfrow=c(1,1),mar=c(0,0,0,0))
plot(g.dist, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)])
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n")
g.state <- V(g1)[state == "SC"]
sel.state <- V(g1)[state == "SC"]
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA
)
mapview(coops.sf, zcol = "Category", legend = FALSE)
mapview(coops.sf, zcol = "Category", legend = FALSE) + territories
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(5,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,4,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 12, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n")
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", main = "Node Type")
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type")
