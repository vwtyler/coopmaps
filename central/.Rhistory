knitr::opts_chunk$set(echo = TRUE)
coops <- read.csv("sc_nodes-geocoded.csv", sep = ",")
names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
library(mapview)
coops <- read.csv("sc_nodes-geocoded.csv", sep = ",")
names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
library(sf)
library(rgdal)
coops <- read.csv("sc_nodes-geocoded.csv", sep = ",")
names(coops)
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lng", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "Category", legend = FALSE)
unzip("./map.data/SC Electric Coop Territorial.zip", exdir = "./map.data")
library(sf)
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
aiken <- read_sf(".", "Aiken Territorial.shp")
aiken <- read_sf("./map.data", "Aiken Territorial.shp")
aiken <- read_sf("./map.data/", "Aiken Territorial.shp")
unzip("./map.data/SC Electric Coop Territorial.zip", exdir = "./map.data")
aiken <- read_sf(dsn = "./map.data/", "Aiken Territorial.shp")
aiken <- read_sf(dsn = ".", "/map.data/Aiken Territorial.shp")
aiken <- read_sf("./map.data/Aiken Territorial.shp")
mapview(coops.sf, zcol = "Category", legend = FALSE) + aiken
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#read names of directory
f <- list.files("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data")
f <- f[grepl("\\.shp", f, perl = T)]
#apply or for to st_read *.shp l or
territories <- sapply(f, function(x){
t <- st_read(file.path("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data", x))
t <- t["geometry"]
t$name <- sub("\\.shp", "", x, perl=T)
st_transform(t, crs= 4326)
})
#apply or for to st_read *.shp l or
territories <- sapply(f, function(x){
t <- st_read(file.path("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data", x))
t <- t["geometry"]
t$name <- rep(sub("\\.shp", "", x, perl=T), nrow(t))
st_transform(t, crs= 4326)
})
#apply or for to st_read *.shp l or
territories <- sapply(f, function(x){
browser()
t <- st_read(file.path("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data", x))
t <- t["geometry"]
t$name <- rep(sub("\\.shp", "", x, perl=T), nrow(t))
st_transform(t, crs= 4326)
})
#apply or for to st_read *.shp l or
territories <- sapply(f, function(x){
t <- st_read(file.path("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data", x))
t <- t["geometry"]
t$name <- rep(sub("\\.shp", "", x, perl=T), nrow(t))
st_transform(t, crs= 4326)
})
#apply or for to st_read *.shp l or
territories <- lapply(f, function(x){
t <- st_read(file.path("/Users/tyler/Dropbox/_GSR/d3sc/central/map.data", x))
t <- t["geometry"]
t$name <- rep(sub("\\.shp", "", x, perl=T), nrow(t))
st_transform(t, crs= 4326)
})
tmp <- do.call(c, territories)
tmp <- do.call(rbind, territories)
ggplot() +
geom_sf(data=tmp,
aes(fill=name))
territories <- do.call(rbind, territories)
mapview(coops.sf, zcol = "Category", legend = FALSE) + territories
#Read the network data:
net <- read.csv("./edges.csv")
#Read the network data:
net <- read.csv("edges.csv")
#Read the network data:
net <- read.csv("edges.csv")
#Read the network data:
net <- read.csv("./edges.csv")
#loading the package:
library(igraph)
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#loading the package:
library(igraph)
#Read the network data:
net <- read.csv("edges.csv")
#Read the node attribute data
node_attrib <- coops
head(node_attrib)
str(node_attrib)
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
summary(g1)
V(g1)
poss <- match(V(g1)$name,node_attrib$idch)
head(node_attrib)
names(node_attrib)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$type <- as.character(node_attrib$Category[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
#if we ask for the summary again we can see the added attributes:
summary(g1)
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
#loading the package:
library(igraph)
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
plot(g1, layout = layout_components, vertex.label = NA, vertex.size = 5, edge.arrow.size = .4)
table(coops$Category)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4, vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = colpal, pch = 16, bty = "n")
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'iowa')
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="blue",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="yellow",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="brown",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,0,0,0))
map('county', 'south carolina')
latex <- matrix(c(V(g1)$long, V(g1)$lat), ncol=2)
plot(g1, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g1)$type)],
edge.curved=.3,
vertex.label=NA
)
par(mfrow=c(1,1),mar=c(0,0,0,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 10, edge.arrow.size = .4, vertex.color = colpal[factor(V(g1)$type)])
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = colpal, pch = 16, bty = "n")
