add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA,
sub = "South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=colpal[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
par(mfrow=c(1,1))
plot(g.dist, layout = layout_components, vertex.size = 14, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)],
main = "Coastal Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
par(mfrow=c(1,1))
plot(g.dist, layout = layout_components, vertex.size = 14, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)],
main = "Coastal Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1))
plot(g.dnodes, layout = layout_components, vertex.size = 15, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.2,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,0,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.01,0))
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,0,1,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.central)$type)],
main = "Central Electric Power Cooperative Direct Network")
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(10),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.01,0))
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.01,0))
par(mfrow=c(1,1),mar=c(0,0,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,1,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.01,0))
par(mfrow=c(1,1),mar=c(0,1,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,0,1,1))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,0,1,2))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "Central Electric Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.central)$type)],
main = "Central Electric Power Cooperative Direct Network")
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(10),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.01,0))
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.central, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.central)$type)],
main = "Central Electric Power Cooperative Direct Network")
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(10),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 10, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
V(g1)$fullname[22]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[22], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.dist, layout = layout_components, vertex.size = 14, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)],
main = "Coastal Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 14, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get each Distribution network's graph
sel.dnodes <- ego(g1, order = 1, nodes = V(g1)[type == "Distribution"], mode = "all", mindist = 0)
g.dnodes <- induced_subgraph(g1, unlist(sel.dnodes))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.dnodes, layout = layout_components, vertex.size = 12, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dnodes)$type)],
main = "South Carolina Distribution Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dnodes)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#get only central's network
V(g1)$fullname[1]
sel.central <- ego(g1, order = 1, nodes = V(g1)[1], mode = "all", mindist = 0)
g.central <- induced_subgraph(g1, unlist(sel.central))
par(mfrow=c(1,1),mar=c(0,3,1,0))
plot(g.central, layout = layout_components, vertex.size = 12, edge.arrow.size = .4,
vertex.color = rainbow(10)[factor(V(g.central)$type)],
main = "Central Electric Power Cooperative Direct Network")
legend("bottomleft", legend = levels(factor(V(g.central)$type)), col = rainbow(10),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 12, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "South Carolina Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "South Carolina Power Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,3,1,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,3,0,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,3,1,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.3,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,3,1,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1), mar=c(0,3,1,0))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.2,0))
V(g1)$fullname[24]
V(g1)$fullname[26]
V(g1)$fullname[26]
#create one distro network
sel.dist <- ego(g1, order = 1, nodes = V(g1)[26], mode = "all", mindist = 0)
g.dist <- induced_subgraph(g1, unlist(sel.dist))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.dist, layout = layout_components, vertex.size = 14, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g.dist)$type)],
main = "Santee Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.dist)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
install.packages("networkD3")
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#loading the package:
library(igraph)
#basic plotting the network on a map
library(maps)
library(networkD3)
library(networkD3)
g1.mem <- igraph::membership(igraph::cluster_walktrap(g1))
g1.d3 <- igraph_to_networkD3(g1, group = g1.mem)
forceNetwork(Links = g1.d3$links, Nodes = g1.d3$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group', zoom = FALSE, legend = FALSE)
library(networkD3)
g1.mem <- igraph::membership(igraph::cluster_walktrap(g1))
g1.d3 <- igraph_to_networkD3(g1, group = g1.mem)
forceNetwork(Links = g1.d3$links, Nodes = g1.d3$nodes,
Source = 'source', Target = 'target',
NodeID = 'name', Group = 'group', zoom = FALSE, legend = FALSE)
devtools::install_github("dreamRs/r2d3maps")
install.packages("devtools")
#basic plotting the network on a map
library(maps)
data(countyMapEnv)
par(mfrow=c(1,1))
map('county', 'south carolina')
sel.state <- V(g1)[state == "SC"]
g.state <- induced_subgraph(g1, unlist(sel.state))
latex <- matrix(c(V(g.state)$long, V(g.state)$lat), ncol=2)
plot(g.state, layout=latex,
add = TRUE,
rescale = FALSE,
edge.arrow.size=.4,
edge.color="purple",
vertex.size=10,
vertex.color=rainbow(12)[factor(V(g.state)$type)],
edge.curved=.3,
vertex.label=NA)
title("South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g.state)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.2,0))
par(mfrow=c(1,1))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1),mar=c(0,3,1,0))
colpal <- c("red", "blue", "yellow", "green", "orange")
plot(g1, layout = layout_components, vertex.size = 11, edge.arrow.size = .4,
vertex.color = rainbow(12)[factor(V(g1)$type)],
main = "South Carolina Electric Cooperative Network")
legend("bottomleft", legend = levels(factor(V(g1)$type)), col = rainbow(12),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
devtools::install_github("dreamRs/r2d3maps")
V(g1)$outclose <- outclose
devtools::install_github("dreamRs/r2d3maps")
source("https://install-github.me/dreamRs/r2d3maps")
source("https://install-github.me/dreamRs/r2d3maps")
devtools::install_github("dreamRs/r2d3maps")
traceback()
devtools::install_github("dreamRs/r2d3maps")
source("https://install-github.me/dreamRs/r2d3maps")
source("https://install-github.me/dreamRs/r2d3maps")
source("C:\Users\vwtyler\Documents\R\r2d3maps")
source("C:\\Users\vwtyler\Documents\R\r2d3maps")
source("C://Users/vwtyler/Documents/R/r2d3maps")
install.packages("~/R/r2d3maps-master.zip", repos = NULL, type = "win.binary")
library(`r2d3maps-master`)
library(r2d3maps-master)
library(r2d3maps)
install.packages("r2d3")
devtools::install_github("rstudio/r2d3")
devtools::install_github("rstudio/r2d3", host = "https://api.github.com")
install.packages("Rtools")
source("https://install-github.me/dreamRs/r2d3maps", host = "https://api.github.com")
devtools::install_github("dreamRs/r2d3maps", host = "https://api.github.com")
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
#D3 mapping?
library(r2d3maps)
library(rnaturalearth)
install.packages("rnaturalearth")
library(rnaturalearth)
us.sf <- ne_states(country = "united states", returnclass = "sf")
us.sf <- ne_states(country = "us", returnclass = "sf")
us.sf <- ne_states(country = "usa", returnclass = "sf")
ne_download(scale=50, type='countries', category='cultural')
us.sf <- ne_countries(returnclass = "sf")
gc()
gc()
names(us.sf)
head(us.sf)
us.sf$name
us.sf <- ne_countries(country = "united states", returnclass = "sf")
us.sf <- ne_countries(country = "United States", returnclass = "sf")
us.sf <- ne_countries(country = "united states of america", returnclass = "sf")
us.sf <- ne_states(country = "united states of america", returnclass = "sf")
d3_map(shape = us.sf)
par(mfrow=c(1,1), mar=c(0,0,0,0))
us.sf <- ne_states(country = "united states of america", returnclass = "sf")
d3_map(shape = us.sf)
#D3 mapping?
library(r2d3maps)
library(rnaturalearth) #countries
par(mfrow=c(1,1), mar=c(0,0,0,0))
us.sf <- ne_states(country = "united states of america", returnclass = "sf")
d3_map(shape = us.sf)
d3_map(shape = us.sf, projection = "Mercator")
d3_map(shape = us.sf, projection = "Albers")
d3_map(shape = us.sf, projection = "AlbersUSA")
d3_map(shape = us.sf, projection = "AlbersUS")
d3_map(shape = us.sf, projection = "ConicalEqualArea")
d3_map(shape = us.sf, projection = "ConicEqualArea")
d3_map(shape = us.sf, projection = "Albers")
map('usa')
library(maps)
map('usa')
map('states')
map('state')
states <- map('state')
states <- st_as_sf(map('state', plot = FALSE, fill = TRUE))
d3_map(shape = states, projection = "Albers")
d3_map(shape = states, projection = "Albers") %>%
add_tooltip()
