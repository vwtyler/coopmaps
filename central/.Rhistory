plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1, V(g.state)$fullname, NA),
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex=.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = .7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = 2,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -2,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,4,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(2,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,1))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,3))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,3,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
vertex.label.dist = -1.7,
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "black",
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "blue",
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
sc_counties +
geom_sf(data = territories,
inherit.aes = FALSE, aes(fill = name),
alpha = .6) +
coord_sf(datum=NA) +
geom_point(aes(lon, lat, color = cat2),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat2 == "Other" | cat2 == "Program"),
size = 3) +
geom_point(aes(lon, lat),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat2 == "Other" | cat2 == "Program"),
size = 3, color = "black", stroke = 1,
shape = 21) +
guides(fill = "none", color = "legend") +
labs(title = "South Carolina Cooperative Service Territories", subtitle = "with Central Distribution Offices & Programs", color = "Node Type") +
theme_map()
par(mfrow=c(1,1), mar=c(0,3,1,0))
plot(g.gt,
layout = layout_components,
vertex.size = 14,
edge.arrow.size = .4,
vertex.color = rainbow(3)[factor(V(g.gt)$cat3)],
vertex.label = ifelse(V(g.state)$name == 2 | V(g.state)$name == 1,
V(g.state)$fullname, NA),
vertex.label.cex = .7,
vertex.label.color = "blue",
main = "South Carolina Electric Cooperative Network",
sub = "G&T and Distribution")
legend("bottomleft", legend = levels(factor(V(g.gt)$cat3)), col = rainbow(3),
pch = 16, bty = "n", title = "Node Type", inset=c(-0.1,0))
install.packages(c("ggmap", "ggrepel", "ggthemes", "mapdata", "mapview", "networkD3"))
coops <- read.csv("nodes_categorized.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
coops <- read.csv("nodes_categorized.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(mapview)
library(rgdal)
library(sf)
library(ggplot2)
library(stringr)
library(scales)
#loading the package:
library(igraph)
library(ggmap)
library(maps)
library(ggthemes)
library(mapdata)
library(tidyverse)
library(ggrepel)
library(networkD3)
coops <- read.csv("nodes_categorized.csv", sep = ",")
#names(coops)
coops$lon <- coops$lng
coops.sf <- st_as_sf(x = coops[!is.na(coops$lat),],
coords = c("lon", "lat"),
crs = "+proj=longlat +datum=WGS84")
mapview(coops.sf, zcol = "cat2", legend = TRUE)
unzip("./map.data/SC Electric Coop Territorial.zip", exdir = "./map.data")
#read names of directory
f <- list.files("./map.data")
f <- f[grepl("\\.shp", f, perl = T)]
#apply or for to st_read *.shp l or
territories <- lapply(f, function(x){
t <- st_read(file.path("./map.data", x))
t <- t["geometry"]
t$name <- rep(sub("\\.shp", "", x, perl=T), nrow(t))
st_transform(t, crs= 4326)
})
territories <- do.call(rbind, territories)
# quick map with ggplot, works!
ggplot() +
geom_sf(data=territories,
aes(fill=name))
#Read the network data:
net <- read.csv("sc_egdes.csv")
#Read the node attribute data
node_attrib <- coops
#we will convert the id to a character for later manipulation:
node_attrib$idch <- as.character(node_attrib$ID)
g1 <- graph.data.frame(net, directed = T)
#we can print a summary of the network to see tha attributes and number of edges and nodes:
#summary(g1)
poss <- match(V(g1)$name,node_attrib$idch)
V(g1)$lat <- node_attrib$lat[poss]
V(g1)$long <- node_attrib$lng[poss]
V(g1)$cat1 <- as.character(node_attrib$cat1[poss])
V(g1)$cat2 <- as.character(node_attrib$cat2[poss])
V(g1)$cat3 <- as.character(node_attrib$cat3[poss])
V(g1)$fullname <- as.character(node_attrib$Label[poss])
V(g1)$state <- as.character(node_attrib$State[poss])
#if we ask for the summary again we can see the added attributes:
#summary(g1)
#The centrality measures can be helpful to describe the network and find nodes that could be interesting.  Here we compute some centrality measures and we add it to the network:
#centrality measures for the full network (no loops)
indeg <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE)
outdeg <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE)
alldeg <- degree(g1, v=V(g1), mode=c("all"),loops=FALSE)
indegN <- degree(g1, v=V(g1), mode=c("in"),loops=FALSE, normalized=TRUE)
outdegN <- degree(g1, v=V(g1), mode=c("out"),loops=FALSE,normalized=TRUE)
inclose <- closeness(g1, v=V(g1), mode = ("in"))
outclose <- closeness(g1, v=V(g1), mode = ("out"))
bet <- betweenness(g1, v=V(g1), directed = TRUE)
betN <- bet/max(bet)
## add centrality measures to node attributes
V(g1)$indeg <- indeg
V(g1)$outdeg <- outdeg
V(g1)$indegN <- indegN
V(g1)$outdegN <- outdegN
V(g1)$inclose <- inclose
V(g1)$outclose <- outclose
V(g1)$bet <- bet
V(g1)$betN <- betN
V(g1)$alldeg <- alldeg
sel.gt <- V(g.state)[cat3 == "GandT" | cat3 == "Distribution"]
g.gt <- induced_subgraph(g.state, unlist(sel.gt))
g.gt <- g.gt %>%
add_edges(c(2,13, 2,18, 2,21))
g.gt <- delete.edges(g.gt, E(g.gt)[23])
edgelist <- get.edgelist(g.gt)
edgelist[,1]<- as.numeric(match(edgelist[,1],V(g.gt)$name))
edgelist[,2]<- as.numeric(match(edgelist[,2],V(g.gt)$name))
plot_vector <- as.data.frame(cbind(V(g.gt)$long,V(g.gt)$lat))
plot_vector$cat2 <- V(g.gt)$cat2
edges.gt <- data.frame(plot_vector[edgelist[,1],], plot_vector[edgelist[,2],])
head(edges.gt)
colnames(edges.gt) <- c("X1","Y1","cat2","X2", "Y2", "cat2.1")
head(edges.gt)
sc_counties +
geom_sf(data = territories,
inherit.aes = FALSE, aes(fill = name),
alpha = .6) +
coord_sf(datum=NA) +
geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2),
color = "black",
data = edges.gt) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier"),
size = 3) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat3 == "GandT"),
size = 3) +
geom_point(aes(lon, lat),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat3 == "GandT"),
size = 3, color = "black", stroke = 1,
shape = 21) +
labs(title = "South Carolina Cooperative Service Territories", subtitle = "with Distribution and G & T nodes", color = "Node Type") +
guides(fill = "none", color = "legend") +
theme_map()
g.gt <- g.gt %>%
add_edges(c(2,13, 2,18, 2,21))
edgelist <- get.edgelist(g.gt)
edgelist[,1]<- as.numeric(match(edgelist[,1],V(g.gt)$name))
edgelist[,2]<- as.numeric(match(edgelist[,2],V(g.gt)$name))
plot_vector <- as.data.frame(cbind(V(g.gt)$long,V(g.gt)$lat))
plot_vector$cat2 <- V(g.gt)$cat2
edges.gt <- data.frame(plot_vector[edgelist[,1],], plot_vector[edgelist[,2],])
head(edges.gt)
colnames(edges.gt) <- c("X1","Y1","cat2","X2", "Y2", "cat2.1")
head(edges.gt)
sc_counties +
geom_sf(data = territories,
inherit.aes = FALSE, aes(fill = name),
alpha = .6) +
coord_sf(datum=NA) +
geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2),
color = "black",
data = edges.gt) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier"),
size = 3) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat3 == "GandT"),
size = 3) +
geom_point(aes(lon, lat),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat3 == "GandT"),
size = 3, color = "black", stroke = 1,
shape = 21) +
labs(title = "South Carolina Cooperative Service Territories", subtitle = "with Distribution and G & T nodes", color = "Node Type") +
guides(fill = "none", color = "legend") +
theme_map()
edgelist
V(g.gt)$name
V(g.gt)$fullname
sel.gt <- V(g.state)[cat3 == "GandT" | cat3 == "Distribution"]
g.gt <- induced_subgraph(g.state, unlist(sel.gt))
edgelist <- get.edgelist(g.gt)
edgelist
g.gt <- delete.edges(g.gt, E(g.gt)[23])
g.gt <- induced_subgraph(g.state, unlist(sel.gt))
g.gt <- g.gt %>%
delete.edges(c(23, 21, 22))
edgelist <- get.edgelist(g.gt)
edgelist
g.gt <- g.gt %>%
add_edges(c(2,6, 2,7, 2,14, 2,17, 2,9))
edgelist <- get.edgelist(g.gt)
edgelist
edgelist[,1]<- as.numeric(match(edgelist[,1],V(g.gt)$name))
edgelist[,2]<- as.numeric(match(edgelist[,2],V(g.gt)$name))
edgelist
g.gt <- induced_subgraph(g.state, unlist(sel.gt))
g.gt <- g.gt %>%
delete.edges(c(23, 21, 22))
g.gt <- g.gt %>%
add_edges(c(2,6, 2,7, 2,14, 2,17, 2,9, 1,2))
edgelist <- get.edgelist(g.gt)
edgelist
edgelist[,1]<- as.numeric(match(edgelist[,1],V(g.gt)$name))
edgelist[,2]<- as.numeric(match(edgelist[,2],V(g.gt)$name))
plot_vector <- as.data.frame(cbind(V(g.gt)$long,V(g.gt)$lat))
plot_vector$cat2 <- V(g.gt)$cat2
edges.gt <- data.frame(plot_vector[edgelist[,1],], plot_vector[edgelist[,2],])
head(edges.gt)
colnames(edges.gt) <- c("X1","Y1","cat2","X2", "Y2", "cat2.1")
head(edges.gt)
sc_counties +
geom_sf(data = territories,
inherit.aes = FALSE, aes(fill = name),
alpha = .6) +
coord_sf(datum=NA) +
geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2),
color = "black",
data = edges.gt) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier"),
size = 3) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat3 == "GandT"),
size = 3) +
geom_point(aes(lon, lat),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat3 == "GandT"),
size = 3, color = "black", stroke = 1,
shape = 21) +
labs(title = "South Carolina Cooperative Service Territories", subtitle = "with Distribution and G & T nodes", color = "Node Type") +
guides(fill = "none", color = "legend") +
theme_map()
tiff("central.tiff", units="in", width=6, height=5, res=300)
sc_counties +
geom_sf(data = territories,
inherit.aes = FALSE, aes(fill = name),
alpha = .6) +
coord_sf(datum=NA) +
geom_segment(aes(x=X1, y=Y1, xend = X2, yend = Y2),
color = "black",
data = edges.gt) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier"),
size = 3) +
geom_point(aes(lon, lat, color = cat3),
data = coops %>%
filter(State == "SC") %>%
filter(cat3 == "GandT"),
size = 3) +
geom_point(aes(lon, lat),
data = coops %>%
filter(State == "SC") %>%
filter(cat1 == "First Tier" | cat3 == "GandT"),
size = 3, color = "black", stroke = 1,
shape = 21) +
labs(title = "South Carolina Cooperative Service Territories", subtitle = "with Distribution and G & T nodes", color = "Node Type") +
guides(fill = "none", color = "legend") +
theme_map()
dev.off()
